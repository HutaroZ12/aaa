name: Main

on: [push, pull_request]

jobs:
  Build:
    name: ${{ matrix.name }}
    strategy:
      matrix:
        include:
          - name: Windows
            os: windows-2022
            buildArgs: windows
            setupCommand: .\"setup/windows.bat"
            artifactName: windowsBuild-x86_64
            artifactPath: export\release\windows\bin\*
          - name: Windows ARM64
            os: windows-2022
            buildArgs: "windows -arm64 -D HXCPP_ARM64"
            setupCommand: .\"setup/mobile.bat"
            artifactName: windowsBuild-arm64
            artifactPath: export\release\windows\bin\*
          - name: Linux
            os: ubuntu-22.04
            buildArgs: linux
            setupCommand: sh ./setup/unix.sh
            artifactName: linuxBuild-x86_64
            artifactPath: export/release/linux/bin/*
          - name: Linux ARM64
            os: ubuntu-22.04-arm
            buildArgs: linux
            setupCommand: sh ./setup/mobile.sh
            artifactName: linuxBuild-arm64
            artifactPath: export/release/linux/bin/*
          - name: macOS x86_64
            os: macos-14
            setupCommand: sh ./setup/unix.sh
            buildArgs: "mac -64 -D HXCPP_M64"
            artifactName: macOSBuild-x86_64
            artifactPath: export/release/macos/bin/*
          - name: macOS AArch64
            os: macos-15
            buildArgs: mac
            setupCommand: sh ./setup/unix.sh
            artifactName: macOSBuild-arm64
            artifactPath: export/release/macos/bin/*
          - name: Android
            os: macos-15
            buildArgs: "android -ONLY_ARMV7"
            setupCommand: sh ./setup/mobile.sh
            artifactName: androidBuild
            artifactPath: "export/release/android/bin/app/build/outputs/apk/release/*.apk"
          - name: iOS
            os: macos-15
            buildArgs: "ios -nosign"
            setupCommand: sh ./setup/mobile.sh
            artifactName: iOSBuild
            artifactPath: "export/release/ios/build/Release-iphoneos/*.ipa"
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y haxe hxcpp
        export HXCPP=$(haxelib path hxcpp | head -n 1)

    - name: Setup environment
      run: ${{ matrix.setupCommand }}

    - name: Build project
      run: |
        haxe ${{ matrix.buildArgs }}

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.artifactName }}
        path: ${{ matrix.artifactPath }}
